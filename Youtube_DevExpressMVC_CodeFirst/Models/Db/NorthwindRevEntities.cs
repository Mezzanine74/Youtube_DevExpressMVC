// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace YoutubeDevExpressMVC.Web.Models.Db
{
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class NorthWindRevEntities : System.Data.Entity.DbContext
    {
        public System.Data.Entity.DbSet<Category> Categories { get; set; } // Category
        public System.Data.Entity.DbSet<Customer> Customers { get; set; } // Customer
        public System.Data.Entity.DbSet<CustomerCustomerDemo> CustomerCustomerDemoes { get; set; } // CustomerCustomerDemo
        public System.Data.Entity.DbSet<CustomerDemographic> CustomerDemographics { get; set; } // CustomerDemographic
        public System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        public System.Data.Entity.DbSet<Order> Orders { get; set; } // Order
        public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // OrderDetail
        public System.Data.Entity.DbSet<Product> Products { get; set; } // Product
        public System.Data.Entity.DbSet<Region> Regions { get; set; } // Region
        public System.Data.Entity.DbSet<Shipper> Shippers { get; set; } // Shipper
        public System.Data.Entity.DbSet<Supplier> Suppliers { get; set; } // Supplier
        public System.Data.Entity.DbSet<Territory> Territories { get; set; } // Territory
        public System.Data.Entity.DbSet<ViewAlphabeticalListOfProduct> ViewAlphabeticalListOfProducts { get; set; } // ViewAlphabeticalListOfProducts
        public System.Data.Entity.DbSet<ViewCategorySalesFor1997> ViewCategorySalesFor1997 { get; set; } // ViewCategorySalesFor1997
        public System.Data.Entity.DbSet<ViewCurrentProductList> ViewCurrentProductLists { get; set; } // ViewCurrentProductList
        public System.Data.Entity.DbSet<ViewCustomerAndSuppliersByCity> ViewCustomerAndSuppliersByCities { get; set; } // ViewCustomerAndSuppliersByCity
        public System.Data.Entity.DbSet<ViewInvoice> ViewInvoices { get; set; } // ViewInvoices
        public System.Data.Entity.DbSet<ViewOrderDetailsExtended> ViewOrderDetailsExtendeds { get; set; } // ViewOrderDetailsExtended
        public System.Data.Entity.DbSet<ViewOrdersQry> ViewOrdersQries { get; set; } // ViewOrdersQry
        public System.Data.Entity.DbSet<ViewOrderSubtotal> ViewOrderSubtotals { get; set; } // ViewOrderSubtotals
        public System.Data.Entity.DbSet<ViewProductsAboveAveragePrice> ViewProductsAboveAveragePrices { get; set; } // ViewProductsAboveAveragePrice
        public System.Data.Entity.DbSet<ViewProductSalesFfor1997> ViewProductSalesFfor1997 { get; set; } // ViewProductSalesFfor1997
        public System.Data.Entity.DbSet<ViewProductsByCategory> ViewProductsByCategories { get; set; } // ViewProductsByCategory
        public System.Data.Entity.DbSet<ViewSalesByCategory> ViewSalesByCategories { get; set; } // ViewSalesByCategory
        public System.Data.Entity.DbSet<ViewSalesTotalsByAmount> ViewSalesTotalsByAmounts { get; set; } // ViewSalesTotalsByAmount
        public System.Data.Entity.DbSet<ViewSummaryOfSalesByQuarter> ViewSummaryOfSalesByQuarters { get; set; } // ViewSummaryOfSalesByQuarter
        public System.Data.Entity.DbSet<ViewSummaryOfSalesByYear> ViewSummaryOfSalesByYears { get; set; } // ViewSummaryOfSalesByYear

        static NorthWindRevEntities()
        {

        }

        public NorthWindRevEntities()
            : base("Name=NorthwindRevEntities")
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CategoryConfiguration());
            modelBuilder.Configurations.Add(new CustomerConfiguration());
            modelBuilder.Configurations.Add(new CustomerCustomerDemoConfiguration());
            modelBuilder.Configurations.Add(new CustomerDemographicConfiguration());
            modelBuilder.Configurations.Add(new EmployeeConfiguration());
            modelBuilder.Configurations.Add(new OrderConfiguration());
            modelBuilder.Configurations.Add(new OrderDetailConfiguration());
            modelBuilder.Configurations.Add(new ProductConfiguration());
            modelBuilder.Configurations.Add(new RegionConfiguration());
            modelBuilder.Configurations.Add(new ShipperConfiguration());
            modelBuilder.Configurations.Add(new SupplierConfiguration());
            modelBuilder.Configurations.Add(new TerritoryConfiguration());
            modelBuilder.Configurations.Add(new ViewAlphabeticalListOfProductConfiguration());
            modelBuilder.Configurations.Add(new ViewCategorySalesFor1997Configuration());
            modelBuilder.Configurations.Add(new ViewCurrentProductListConfiguration());
            modelBuilder.Configurations.Add(new ViewCustomerAndSuppliersByCityConfiguration());
            modelBuilder.Configurations.Add(new ViewInvoiceConfiguration());
            modelBuilder.Configurations.Add(new ViewOrderDetailsExtendedConfiguration());
            modelBuilder.Configurations.Add(new ViewOrdersQryConfiguration());
            modelBuilder.Configurations.Add(new ViewOrderSubtotalConfiguration());
            modelBuilder.Configurations.Add(new ViewProductsAboveAveragePriceConfiguration());
            modelBuilder.Configurations.Add(new ViewProductSalesFfor1997Configuration());
            modelBuilder.Configurations.Add(new ViewProductsByCategoryConfiguration());
            modelBuilder.Configurations.Add(new ViewSalesByCategoryConfiguration());
            modelBuilder.Configurations.Add(new ViewSalesTotalsByAmountConfiguration());
            modelBuilder.Configurations.Add(new ViewSummaryOfSalesByQuarterConfiguration());
            modelBuilder.Configurations.Add(new ViewSummaryOfSalesByYearConfiguration());
        }

    }
}
// </auto-generated>
